(function(){

    var STARTPOS = [0,0];
    var MOVE_MAP = {
        '<' : [0, -1],
        '>' : [0,  1],
        '^' : [1, -1],
        'v' : [1,  1]
    };

    var loadData = function loadData() {
        var request = new XMLHttpRequest();
        request.open('GET', 'input.txt', true);

        request.addEventListener('load', function() {
            if (request.status >= 200 && request.status < 400) {
                var data = request.responseText;
                var parsed = parseData(data);
                displayResults(parsed);
            } else {
                throw new Error('Error response from server');
            }
        });

        request.addEventListener('error', function(e) {
            throw new Error('Request failed');
        });

        request.send();
    };

    var parseData = function parseData(data) {

        //Perf test : the below took ~450 ms
        var result = {
            pos : [STARTPOS[0], STARTPOS[1]],
            billboards : [],
            coords : {},
            path : [STARTPOS],
            bounds : {
                lower : [0,0],
                upper : [0,0]
            },
            billboardpos : []
        };
        for (var i = data.length - 1; i >= 0; i--) {
            var action = data[i];

            switch(action) {
                case '<' :
                case '>' :
                case 'v' :
                case '^' :
                    result.pos[MOVE_MAP[action][0]] += MOVE_MAP[action][1];
                    result.path.push([result.pos[0], result.pos[1]]);
                    result.bounds.upper[MOVE_MAP[action][0]] = result.pos[MOVE_MAP[action][0]] > result.bounds.upper[MOVE_MAP[action][0]] ? result.pos[MOVE_MAP[action][0]] : result.bounds.upper[MOVE_MAP[action][0]];
                    result.bounds.lower[MOVE_MAP[action][0]] = result.pos[MOVE_MAP[action][0]] < result.bounds.lower[MOVE_MAP[action][0]] ? result.pos[MOVE_MAP[action][0]] : result.bounds.lower[MOVE_MAP[action][0]];
                break;
                case 'x' :
                    result.coords[result.pos[0]] = result.coords[result.pos[0]] || {};
                    result.coords[result.pos[0]][result.pos[1]] = typeof result.coords[result.pos[0]][result.pos[1]] === 'number' ?  result.coords[result.pos[0]][result.pos[1]] : result.billboards.length;
                    result.billboards[result.coords[result.pos[0]][result.pos[1]]] = result.billboards[result.coords[result.pos[0]][result.pos[1]]] || 0;
                    result.billboards[result.coords[result.pos[0]][result.pos[1]]] += 1;
                    var coord = result.pos[0] + ',' + result.pos[1];
                    if(result.billboardpos.indexOf(coord) === -1) {
                        result.billboardpos.push(coord);
                    }
                    result.path.push('photo');
                break;

                default:
                    throw new SyntaxError('Unexpected input');

            }
        }

        return result;

    };

    var displayResults = function displayResults(data) {
        console.log(data.billboardpos);
        var $total = document.querySelector('[data-total]');
        var $endpos = document.querySelector('[data-endpos]');

        var xrange = data.bounds.upper[0] - data.bounds.lower[0];
        var yrange = data.bounds.upper[1] - data.bounds.lower[1];

        var width = 1280
        var height = 1280 / (xrange / yrange);


        var canvas = document.getElementById('canvas');
        canvas.width = width;
        canvas.height = height;

        var ctx = canvas.getContext('2d');
        ctx.width = width;
        ctx.height = height;



        var pos = STARTPOS;

        var startx = 10 + (STARTPOS[0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20);
        var starty = 10 + (STARTPOS[1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20);

        var endx = 10 + (data.pos[0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20);
        var endy = 10 + (data.pos[1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20);


        var i = 0;

        var lpf = 100;
        var ln = 0;
        var incrementalCount = {};


        var render = function() {
            var point = data.path[i];

            var x = 10 + (point[0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20);
            var y = 10 + (point[1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20);

            

            if(point === 'photo') {
                point = pos;
                var photoCount = data.billboards[data.coords[point[0]][point[1]]];

                $total.textContent = data.coords[point[0]][point[1]] + 1;
                
                x = 10 + (point[0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20);
                y = 10 + (point[1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20);
                
                ctx.beginPath();
                incrementalCount[point[0]] = incrementalCount[point[0]] || {};
                incrementalCount[point[0]][point[1]] = incrementalCount[point[0]][point[1]] || 0;
                incrementalCount[point[0]][point[1]] += 1;

                ctx.arc(x, y, 3.5, 0, Math.PI * 2, false);
                ctx.fillStyle = 'hsla('+ (100 - (incrementalCount[point[0]][point[1]] / 10) * 100) +', 100%, 60%, 1)';
                ctx.fill();
                ctx.closePath();
            } else {
                ctx.beginPath();
                ctx.moveTo(10 + (pos[0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20), 10 + (pos[1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20));
                ctx.lineTo(x,y);
                ctx.strokeStyle = 'rgba(255, 255, 255, 0.2)';
                ctx.stroke();
                ctx.closePath();

                pos = point;
            }

            $endpos.textContent = point[0] + ', ' + point[1];

            // Always draw start point on top


            ctx.beginPath();
            ctx.arc(startx, starty, 5, 0, Math.PI * 2, false);
            ctx.fillStyle =  'rgba(255, 60, 88, 1)';
            ctx.fill();

            // Always draw end point on top

            ctx.beginPath();
            ctx.arc(endx, endy, 5, 0, Math.PI * 2, false);
            ctx.fillStyle =  'rgba(63, 188, 88, 1)';
            ctx.fill();
            i++;

            if(i < data.path.length) {
                if(ln < lpf) {
                    ln ++;
                    render();
                } else {
                    ln = 0;
                    requestAnimationFrame(render);
                }
            }
        }

        render();


//         var optimumPath = [[1,0 ],
// [2,1 ],
// [1,1 ],
// [0,1 ],
// [-1,2 ],
// [0,3 ],
// [1,3 ],
// [0,4 ],
// [-1,3 ],
// [-3,5 ],
// [-3,4 ],
// [-4,3 ],
// [-4,2 ],
// [-5,1 ],
// [-6,0 ],
// [-7,1 ],
// [-7,2 ],
// [-8,2 ],
// [-9,1 ],
// [-10,0 ],
// [-11,0 ],
// [-12,0 ],
// [-13,1 ],
// [-12,2 ],
// [-11,2 ],
// [-11,1 ],
// [-13,-1 ],
// [-13,-2 ],
// [-12,-1 ],
// [-11,-1 ],
// [-10,-2 ],
// [-10,-1 ],
// [-9,0 ],
// [-8,-1 ],
// [-8,0 ],
// [-8,1 ],
// [-7,0 ],
// [-7,-1 ],
// [-7,-2 ],
// [-8,-3 ],
// [-7,-4 ],
// [-7,-3 ],
// [-8,-2 ],
// [-9,-1 ],
// [-10,-3 ],
// [-11,-4 ],
// [-11,-5 ],
// [-10,-5 ],
// [-9,-6 ],
// [-9,-5 ],
// [-8,-4 ],
// [-7,-5 ],
// [-8,-5 ],
// [-9,-4 ],
// [-11,-2 ],
// [-11,-3 ],
// [-12,-4 ],
// [-13,-5 ],
// [-14,-6 ],
// [-13,-6 ],
// [-14,-5 ],
// [-15,-4 ],
// [-14,-3 ],
// [-15,-3 ],
// [-16,-4 ],
// [-16,-3 ],
// [-15,0 ],
// [-15,1 ],
// [-13,-3 ],
// [-13,-4 ],
// [-12,-5 ],
// [-12,-6 ],
// [-13,-7 ],
// [-13,-8 ],
// [-12,-8 ],
// [-11,-7 ],
// [-10,-8 ],
// [-9,-7 ],
// [-8,-6 ],
// [-7,-6 ],
// [-6,-4 ],
// [-6,-3 ],
// [-4,-5 ],
// [-3,-4 ],
// [-3,-5 ],
// [-4,-6 ],
// [-4,-7 ],
// [-4,-8 ],
// [-3,-8 ],
// [-5,-9 ],
// [-7,-10 ],
// [-8,-9 ],
// [-9,-9 ],
// [-9,-8 ],
// [-8,-8 ],
// [-8,-7 ],
// [-7,-7 ],
// [-7,-8 ],
// [-7,-9 ],
// [-8,-10 ],
// [-9,-10 ],
// [-10,-9 ],
// [-11,-10 ],
// [-10,-10 ],
// [-9,-11 ],
// [-8,-12 ],
// [-9,-13 ],
// [-9,-14 ],
// [-8,-13 ],
// [-7,-13 ],
// [-7,-12 ],
// [-6,-11 ],
// [-5,-12 ],
// [-5,-11 ],
// [-4,-12 ],
// [-3,-13 ],
// [-2,-12 ],
// [-1,-11 ],
// [0,-12 ],
// [1,-12 ],
// [1,-11 ],
// [-1,-9 ],
// [-2,-10 ],
// [-2,-9 ],
// [-1,-10 ],
// [1,-8 ],
// [-1,-8 ],
// [-2,-8 ],
// [-3,-7 ],
// [-2,-7 ],
// [-1,-7 ],
// [-1,-6 ],
// [-1,-5 ],
// [0,-5 ],
// [1,-5 ],
// [1,-4 ],
// [0,-2 ],
// [-2,-2 ],
// [-3,-1 ],
// [-3,-2 ],
// [-5,-2 ],
// [-6,-2 ],
// [-5,-3 ],
// [-5,-4 ],
// [-5,-5 ],
// [-5,-6 ],
// [-6,-6 ],
// [-6,-7 ],
// [-6,-8 ],
// [-5,-8 ],
// [-6,-9 ],
// [-5,-10 ],
// [-6,-10 ],
// [-7,-11 ],
// [-8,-11 ],
// [-9,-12 ],
// [-10,-12 ],
// [-10,-11 ],
// [-11,-9 ],
// [-13,-11 ],
// [-13,-13 ],
// [-12,-14 ],
// [-14,-16 ],
// [-14,-17 ],
// [-14,-18 ],
// [-14,-19 ],
// [-14,-20 ],
// [-13,-20 ],
// [-12,-20 ],
// [-11,-21 ],
// [-10,-22 ],
// [-9,-23 ],
// [-8,-24 ],
// [-9,-24 ],
// [-8,-25 ],
// [-7,-24 ],
// [-6,-24 ],
// [-5,-25 ],
// [-8,-26 ],
// [-9,-26 ],
// [-9,-25 ],
// [-11,-26 ],
// [-12,-25 ],
// [-13,-26 ],
// [-12,-26 ],
// [-13,-24 ],
// [-14,-24 ],
// [-15,-25 ],
// [-17,-25 ],
// [-18,-20 ],
// [-17,-20 ],
// [-16,-21 ],
// [-15,-22 ],
// [-14,-22 ],
// [-13,-22 ],
// [-10,-23 ],
// [-6,-22 ],
// [-7,-21 ],
// [-7,-20 ],
// [-7,-19 ],
// [-8,-18 ],
// [-9,-18 ],
// [-10,-19 ],
// [-10,-20 ],
// [-11,-20 ],
// [-12,-19 ],
// [-13,-19 ],
// [-11,-17 ],
// [-10,-18 ],
// [-9,-19 ],
// [-8,-17 ],
// [-7,-17 ],
// [-8,-16 ],
// [-7,-15 ],
// [-6,-15 ],
// [-5,-16 ],
// [-4,-15 ],
// [-3,-15 ],
// [-2,-16 ],
// [0,-17 ],
// [-2,-19 ],
// [-2,-20 ],
// [-3,-19 ],
// [-5,-15 ],
// [-4,-14 ],
// [-3,-14 ],
// [-5,-13 ],
// [-6,-13 ],
// [-7,-14 ],
// [-8,-14 ],
// [-9,-15 ],
// [-10,-15 ],
// [-11,-16 ],
// [-12,-16 ],
// [-10,-17 ],
// [-15,-11 ],
// [-19,-5 ],
// [-22,-6 ],
// [-23,-5 ],
// [-24,-6 ],
// [-25,-5 ],
// [-25,-6 ],
// [-24,-5 ],
// [-25,-4 ],
// [-26,-4 ],
// [-28,-6 ],
// [-29,-5 ],
// [-30,-5 ],
// [-31,-5 ],
// [-32,-5 ],
// [-33,-6 ],
// [-34,-5 ],
// [-35,-6 ],
// [-36,-7 ],
// [-37,-8 ],
// [-38,-8 ],
// [-37,-9 ],
// [-36,-8 ],
// [-35,-9 ],
// [-34,-10 ],
// [-33,-8 ],
// [-33,-7 ],
// [-34,-7 ],
// [-35,-7 ],
// [-34,-6 ],
// [-34,-3 ],
// [-35,-2 ],
// [-35,-3 ],
// [-36,-2 ],
// [-36,0 ],
// [-35,1 ],
// [-36,1 ],
// [-38,1 ],
// [-39,0 ],
// [-39,2 ],
// [-39,3 ],
// [-38,5 ],
// [-37,5 ],
// [-36,3 ],
// [-35,2 ],
// [-34,3 ],
// [-34,2 ],
// [-33,1 ],
// [-33,2 ],
// [-34,1 ],
// [-35,0 ],
// [-34,-1 ],
// [-35,-1 ],
// [-34,0 ],
// [-33,0 ],
// [-32,0 ],
// [-33,-1 ],
// [-32,-1 ],
// [-32,-2 ],
// [-32,-3 ],
// [-31,-2 ],
// [-30,-3 ],
// [-29,-6 ],
// [-28,-7 ],
// [-29,-8 ],
// [-30,-9 ],
// [-30,-10 ],
// [-30,-11 ],
// [-29,-11 ],
// [-28,-9 ],
// [-29,-9 ],
// [-28,-8 ],
// [-27,-7 ],
// [-26,-8 ],
// [-26,-9 ],
// [-27,-9 ],
// [-25,-10 ],
// [-24,-10 ],
// [-23,-9 ],
// [-24,-9 ],
// [-25,-9 ],
// [-23,-11 ],
// [-24,-12 ],
// [-25,-12 ],
// [-24,-13 ],
// [-24,-11 ],
// [-23,-6 ],
// [-22,-5 ],
// [-5,0 ],
// [-4,0 ],
// [-3,0 ],
// [-6,1 ],
// [-5,3 ],
// [-5,4 ],
// [-6,3 ],
// [-4,6 ],
// [-5,7 ],
// [-6,7 ],
// [-6,6 ],
// [-6,8 ],
// [0,0 ],
// [4,-4 ],
// [5,-4 ],
// [5,-5 ],
// [6,-6 ],
// [7,-5 ],
// [7,-4 ],
// [9,-7 ],
// [9,-9 ],
// [8,-11 ],
// [7,-11 ],
// [6,-11 ],
// [7,-10 ],
// [6,-9 ],
// [6,-8 ],
// [5,-9 ],
// [5,-10 ],
// [6,-10 ],
// [7,-9 ],
// [5,-7 ],
// [4,-7 ],
// [5,-8 ],
// [4,-8 ],
// [4,-10 ],
// [4,-11 ],
// [4,-12 ],
// [3,-13 ],
// [2,-14 ],
// [4,-14 ],
// [5,-13 ],
// [5,-14 ],
// [5,-15 ],
// [5,-16 ],
// [6,-16 ],
// [7,-15 ],
// [7,-14 ],
// [6,-14 ],
// [7,-13 ],
// [7,-12 ],
// [6,-12 ],
// [6,-13 ],
// [5,-12 ],
// [4,-13 ],
// [5,-11 ],
// [10,-12 ],
// [12,-11 ],
// [13,-12 ],
// [11,-14 ],
// [10,-15 ],
// [10,-16 ],
// [9,-16 ],
// [-3,-11 ],
// [-4,-11 ],
// [-38,-7 ],
// [-39,-6 ],
// [-40,-5 ],
// [-41,-5 ],
// [-40,-4 ],
// [-41,-4 ],
// [-42,-4 ],
// [-41,-3 ],
// [-41,-2 ],
// [-40,-3 ],
// [-39,-3 ],
// [-38,-3 ],
// [-39,-4 ],
// [-37,-4 ],
// [-36,-3 ],
// [-36,-4 ],
// [-37,-5 ],
// [-38,-6 ],
// [-37,-6 ],
// [-39,-8 ],
// [-40,-7 ],
// [-41,-8 ],
// [-42,-9 ],
// [-42,-8 ],
// [-43,-8 ],
// [-44,-8 ],
// [-43,-7 ],
// [-43,-9 ],
// [-41,-10 ],
// [-40,-10 ],
// [-42,-13 ],
// [-43,-14 ],
// [-45,-15 ],
// [-47,-15 ],
// [-48,-16 ],
// [-48,-17 ],
// [-50,-15 ],
// [-51,-16 ],
// [-50,-17 ],
// [-52,-19 ],
// [-52,-20 ],
// [-52,-21 ],
// [-53,-22 ],
// [-55,-24 ],
// [-56,-25 ],
// [-57,-25 ],
// [-58,-24 ],
// [-59,-23 ],
// [-60,-23 ],
// [-60,-22 ],
// [-59,-21 ],
// [-60,-21 ],
// [-61,-22 ],
// [-59,-24 ],
// [-58,-23 ],
// [-57,-22 ],
// [-56,-22 ],
// [-57,-21 ],
// [-58,-20 ],
// [-58,-19 ],
// [-58,-18 ],
// [-59,-18 ],
// [-60,-19 ],
// [-59,-20 ],
// [-59,-19 ],
// [-60,-18 ],
// [-61,-17 ],
// [-61,-18 ],
// [-59,-17 ],
// [-58,-17 ],
// [-57,-16 ],
// [-58,-15 ],
// [-59,-14 ],
// [-58,-14 ],
// [-56,-16 ],
// [-56,-17 ],
// [-55,-17 ],
// [-56,-18 ],
// [-57,-19 ],
// [-57,-20 ],
// [-58,-22 ],
// [-57,-23 ],
// [-57,-24 ],
// [-55,-26 ],
// [-54,-25 ],
// [-53,-25 ],
// [-52,-25 ],
// [-52,-26 ],
// [-53,-27 ],
// [-52,-28 ],
// [-53,-28 ],
// [-52,-29 ],
// [-52,-30 ],
// [-52,-31 ],
// [-53,-32 ],
// [-52,-33 ],
// [-51,-34 ],
// [-52,-35 ],
// [-53,-34 ],
// [-53,-35 ],
// [-52,-36 ],
// [-53,-36 ],
// [-53,-37 ],
// [-54,-38 ],
// [-55,-37 ],
// [-55,-36 ],
// [-55,-35 ],
// [-55,-34 ],
// [-56,-33 ],
// [-57,-33 ],
// [-56,-32 ],
// [-56,-31 ],
// [-57,-31 ],
// [-58,-31 ],
// [-59,-32 ],
// [-60,-33 ],
// [-61,-34 ],
// [-62,-35 ],
// [-61,-36 ],
// [-61,-35 ],
// [-62,-34 ],
// [-63,-35 ],
// [-63,-36 ],
// [-63,-37 ],
// [-64,-38 ],
// [-65,-39 ],
// [-66,-40 ],
// [-66,-39 ],
// [-65,-38 ],
// [-66,-37 ],
// [-67,-36 ],
// [-68,-35 ],
// [-68,-34 ],
// [-67,-34 ],
// [-66,-35 ],
// [-65,-35 ],
// [-64,-34 ],
// [-64,-35 ],
// [-64,-36 ],
// [-65,-37 ],
// [-66,-38 ],
// [-67,-39 ],
// [-67,-40 ],
// [-67,-41 ],
// [-68,-40 ],
// [-69,-40 ],
// [-69,-41 ],
// [-70,-41 ],
// [-71,-41 ],
// [-72,-41 ],
// [-73,-41 ],
// [-74,-42 ],
// [-73,-43 ],
// [-72,-43 ],
// [-71,-43 ],
// [-72,-44 ],
// [-73,-44 ],
// [-74,-44 ],
// [-75,-45 ],
// [-76,-46 ],
// [-77,-46 ],
// [-74,-47 ],
// [-73,-47 ],
// [-71,-47 ],
// [-70,-46 ],
// [-69,-45 ],
// [-68,-45 ],
// [-67,-44 ],
// [-66,-45 ],
// [-66,-46 ],
// [-66,-47 ],
// [-67,-47 ],
// [-68,-47 ],
// [-67,-46 ],
// [-67,-45 ],
// [-66,-44 ],
// [-65,-44 ],
// [-64,-42 ],
// [-64,-41 ],
// [-64,-40 ],
// [-64,-39 ],
// [-63,-40 ],
// [-62,-42 ],
// [-61,-42 ],
// [-60,-41 ],
// [-59,-41 ],
// [-58,-40 ],
// [-58,-41 ],
// [-59,-42 ],
// [-59,-43 ],
// [-58,-44 ],
// [-57,-44 ],
// [-56,-43 ],
// [-57,-43 ],
// [-55,-43 ],
// [-53,-43 ],
// [-52,-43 ],
// [-50,-41 ],
// [-49,-40 ],
// [-48,-41 ],
// [-48,-42 ],
// [-47,-43 ],
// [-46,-42 ],
// [-45,-43 ],
// [-45,-42 ],
// [-46,-43 ],
// [-47,-44 ],
// [-48,-44 ],
// [-49,-43 ],
// [-50,-43 ],
// [-49,-46 ],
// [-48,-47 ],
// [-48,-46 ],
// [-51,-49 ],
// [-50,-50 ],
// [-50,-51 ],
// [-49,-52 ],
// [-49,-53 ],
// [-49,-54 ],
// [-47,-52 ],
// [-46,-54 ],
// [-45,-57 ],
// [-46,-58 ],
// [-46,-57 ],
// [-47,-58 ],
// [-48,-58 ],
// [-47,-59 ],
// [-48,-59 ],
// [-49,-59 ],
// [-47,-60 ],
// [-46,-61 ],
// [-50,-62 ],
// [-52,-63 ],
// [-53,-63 ],
// [-51,-58 ],
// [-53,-57 ],
// [-52,-54 ],
// [-52,-53 ],
// [-54,-52 ],
// [-55,-51 ],
// [-55,-52 ],
// [-56,-52 ],
// [-58,-50 ],
// [-59,-49 ],
// [-60,-48 ],
// [-59,-47 ],
// [-60,-46 ],
// [-59,-46 ],
// [-58,-46 ],
// [-57,-46 ],
// [-57,-47 ],
// [-56,-48 ],
// [-57,-49 ],
// [-56,-49 ],
// [-55,-50 ],
// [-57,-50 ],
// [-58,-49 ],
// [-59,-48 ],
// [-58,-47 ],
// [-58,-48 ],
// [-59,-50 ],
// [-60,-49 ],
// [-61,-48 ],
// [-62,-49 ],
// [-63,-50 ],
// [-64,-51 ],
// [-64,-50 ],
// [-63,-49 ],
// [-64,-48 ],
// [-63,-48 ],
// [-64,-49 ],
// [-62,-48 ],
// [-62,-47 ],
// [-61,-46 ],
// [-62,-45 ],
// [-63,-44 ],
// [-62,-44 ],
// [-61,-43 ],
// [-60,-44 ],
// [-60,-45 ],
// [-61,-44 ],
// [-62,-43 ],
// [-63,-43 ],
// [-63,-42 ],
// [-61,-41 ],
// [-60,-43 ],
// [-59,-45 ],
// [-60,-47 ],
// [-63,-47 ],
// [-64,-47 ],
// [-64,-46 ],
// [-65,-47 ],
// [-68,-49 ],
// [-69,-50 ],
// [-70,-50 ],
// [-70,-49 ],
// [-69,-49 ],
// [-68,-50 ],
// [-67,-51 ],
// [-67,-53 ],
// [-68,-54 ],
// [-69,-54 ],
// [-70,-55 ],
// [-70,-56 ],
// [-71,-56 ],
// [-72,-56 ],
// [-69,-55 ],
// [-68,-53 ],
// [-67,-55 ],
// [-66,-55 ],
// [-62,-53 ],
// [-61,-52 ],
// [-61,-53 ],
// [-61,-54 ],
// [-62,-54 ],
// [-58,-53 ],
// [-56,-54 ],
// [-56,-55 ],
// [-57,-55 ],
// [-52,-51 ],
// [-54,-47 ],
// [-56,-41 ],
// [-56,-40 ],
// [-56,-39 ],
// [-57,-40 ],
// [-55,-40 ],
// [-54,-41 ],
// [-54,-40 ],
// [-54,-39 ],
// [-52,-40 ],
// [-51,-40 ],
// [-50,-37 ],
// [-47,-37 ],
// [-47,-35 ],
// [-46,-35 ],
// [-44,-35 ],
// [-52,-34 ],
// [-54,-32 ],
// [-54,-31 ],
// [-54,-30 ],
// [-55,-29 ],
// [-56,-29 ],
// [-57,-28 ],
// [-58,-28 ],
// [-59,-27 ],
// [-60,-28 ],
// [-61,-27 ],
// [-63,-25 ],
// [-64,-25 ],
// [-64,-26 ],
// [-66,-27 ],
// [-66,-28 ],
// [-68,-31 ],
// [-69,-32 ],
// [-70,-32 ],
// [-71,-31 ],
// [-70,-31 ],
// [-69,-33 ],
// [-71,-33 ],
// [-73,-35 ],
// [-74,-35 ],
// [-75,-34 ],
// [-76,-33 ],
// [-77,-33 ],
// [-78,-34 ],
// [-79,-34 ],
// [-79,-33 ],
// [-79,-32 ],
// [-80,-31 ],
// [-81,-31 ],
// [-81,-33 ],
// [-77,-31 ],
// [-76,-31 ],
// [-75,-31 ],
// [-74,-30 ],
// [-74,-31 ],
// [-77,-32 ],
// [-76,-34 ],
// [-77,-34 ],
// [-76,-36 ],
// [-75,-37 ],
// [-76,-37 ],
// [-77,-38 ],
// [-77,-37 ],
// [-75,-39 ],
// [-75,-38 ],
// [-74,-37 ],
// [-74,-38 ],
// [-74,-39 ],
// [-73,-39 ],
// [-72,-38 ],
// [-71,-37 ],
// [-70,-38 ],
// [-69,-38 ],
// [-69,-37 ],
// [-68,-37 ],
// [-68,-36 ],
// [-69,-35 ],
// [-70,-35 ],
// [-70,-37 ],
// [-72,-39 ],
// [-72,-40 ],
// [-71,-39 ],
// [-70,-39 ],
// [-70,-40 ],
// [-72,-42 ],
// [-71,-42 ],
// [-70,-42 ],
// [-69,-43 ],
// [-69,-42 ],
// [-70,-43 ],
// [-69,-44 ],
// [-68,-39 ],
// [-67,-38 ],
// [-68,-38 ],
// [-66,-36 ],
// [-65,-36 ],
// [-64,-37 ],
// [-62,-38 ],
// [-62,-37 ],
// [-60,-38 ],
// [-57,-35 ],
// [-56,-36 ],
// [-59,-34 ],
// [-59,-33 ],
// [-61,-33 ],
// [-63,-34 ],
// [-64,-33 ],
// [-65,-34 ],
// [-64,-32 ],
// [-60,-31 ],
// [-60,-30 ],
// [-56,-28 ],
// [-55,-27 ],
// [-54,-26 ],
// [-54,-27 ],
// [-54,-28 ],
// [-55,-28 ],
// [-54,-29 ],
// [-53,-30 ],
// [-52,-27 ],
// [-51,-27 ],
// [-51,-28 ],
// [-50,-27 ],
// [-54,-20 ],
// [-55,-19 ],
// [-55,-18 ],
// [-53,-19 ],
// [-55,-14 ],
// [-51,-11 ],
// [-49,-11 ],
// [-48,-11 ],
// [-47,-10 ],
// [-46,-8 ],
// [-47,-7 ],
// [-47,-6 ],
// [-48,-5 ],
// [-47,-5 ],
// [-46,-6 ],
// [-48,-8 ],
// [-47,-8 ],
// [-49,-10 ],
// [-51,-9 ],
// [-53,-7 ],
// [-52,-6 ],
// [-54,-7 ],
// [-54,-6 ],
// [-54,-9 ],
// [-55,-9 ],
// [-56,-9 ],
// [-58,-10 ],
// [-59,-11 ],
// [-48,-6 ],
// [-61,-19 ],
// [-60,-20 ],
// [-61,-21 ],
// [-62,-22 ],
// [-64,-22 ],
// [-64,-23 ],
// [-67,-35 ],
// [-75,-35 ],
// [-75,-36 ],
// [1,0]];


//         for (var i = 1; i < optimumPath.length; i++) {

//             var x = 10 + (optimumPath[i][0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20);
//             var y = 10 + (optimumPath[i][1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20);
//             var lastx = 10 + (optimumPath[i -1][0] - data.bounds.lower[0]) / (xrange) * (ctx.width - 20);
//             var lasty = 10 + (optimumPath[i -1][1] - data.bounds.lower[1]) / (yrange) * (ctx.height - 20);
//             console.log(x, y, lastx, lasty)

//             ctx.beginPath();
//             ctx.moveTo(lastx, lasty);
//             ctx.lineTo(x,y);
//             ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';
//             ctx.stroke();
//             ctx.closePath();


//         }




    };


    loadData();


})();